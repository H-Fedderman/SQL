# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

# Then I inserted Spotify Data .csv into the table.

# Next, I explored the data using the following SQL.

# First, I determined who the top 10 artists are based on popularity.
SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

# Second, I determined what song had the shortest duration and the most accoustics.
SELECT artist_name, track_name, acousticness, duration_ms
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY duration_ms, acousticness desc
LIMIT 1;

# Then, I figured out what the average danceability is for the top 10 most popular songs.
SELECT AVG(danceability) AS avg_danceability
FROM BIT_DB.Spotifydata
WHERE popularity IN (SELECT popularity FROM BIT_DB.Spotifydata ORDER BY popularity DESC LIMIT 10);

# Last, I calculated the average popularity using a TempTable and then I displayed which artists had a popularity over 90 and labeled them as "Top Star."
WITH Average_Popularity AS(
SELECT AVG(popularity) AS avg_popularity, artist_name
FROM Spotifydata
GROUP BY artist_name
)
SELECT artist_name, avg_popularity, 'Top Star' AS tag
FROM Average_Popularity
WHERE avg_popularity >= 90
GROUP BY artist_name
ORDER BY avg_popularity DESC;

